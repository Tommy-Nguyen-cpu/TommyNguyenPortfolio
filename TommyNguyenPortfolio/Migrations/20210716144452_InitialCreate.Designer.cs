// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TommyNguyenPortfolio.Data;

namespace TommyNguyenPortfolio.Migrations
{
    [DbContext(typeof(TommyNguyenPortfolioContext))]
    [Migration("20210716144452_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TommyNguyenPortfolio.Models.PasswordTable", b =>
                {
                    b.Property<int>("PasswordTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PasswordTableId");

                    b.ToTable("PasswordTable");
                });

            modelBuilder.Entity("TommyNguyenPortfolio.Models.RecommendationDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyWorkedFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRecommended")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PasswordTableId")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recommender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationToStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PasswordTableId");

                    b.ToTable("RecommendationDatabase");
                });

            modelBuilder.Entity("TommyNguyenPortfolio.Models.RecommendationDatabase", b =>
                {
                    b.HasOne("TommyNguyenPortfolio.Models.PasswordTable", "passwordTableID")
                        .WithMany()
                        .HasForeignKey("PasswordTableId");

                    b.Navigation("passwordTableID");
                });
#pragma warning restore 612, 618
        }
    }
}
